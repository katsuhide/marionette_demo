// Generated by CoffeeScript 1.7.1
'use strict';
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

TodoMVC.module('Todos', function(Todos, App, Backbone) {
  Todos.Todo = (function(_super) {
    __extends(Todo, _super);

    function Todo() {
      return Todo.__super__.constructor.apply(this, arguments);
    }

    Todo.prototype.defaults = {
      title: '',
      completed: false,
      created: 0
    };

    Todo.prototype.initialize = function() {
      if (this.isNew) {
        return this.set('created', Date.now());
      }
    };

    Todo.prototype.toggle = function() {
      return this.set('completed', !this.isCompleted());
    };

    Todo.prototype.isCompleted = function() {
      return this.get('completed');
    };

    return Todo;

  })(Backbone.Model);
  return Todos.TodoList = (function(_super) {
    __extends(TodoList, _super);

    function TodoList() {
      return TodoList.__super__.constructor.apply(this, arguments);
    }

    TodoList.prototype.model = Todos.Todo;

    TodoList.prototype.localStorage = new Backbone.LocalStorage('todos-backbone-marionette');

    TodoList.prototype.getCompleted = function() {
      return this.filter(this._isCompleted);
    };

    TodoList.prototype.getActive = function() {
      return this.reject(this._isCompleted);
    };

    TodoList.prototype.comparator = function(todo) {
      return todo.get('created');
    };

    TodoList.prototype._isCompleted = function(todo) {
      return todo.isCompleted();
    };

    return TodoList;

  })(Backbone.Collection);
});
